<launch>

<!-- Create some static tfs to develop our tf tree for testing -->

<node pkg="tf2_ros" type="static_transform_publisher" name="world_to_map_tf" args="0 0 0 0 0 0 world table_map" />
<node pkg="tf2_ros" type="static_transform_publisher" name="world_to_usb_cam_tf1" args="0 0 1 0 0 3.14159 world usb_cam1" />
<node pkg="tf2_ros" type="static_transform_publisher" name="world_to_usb_cam_tf2" args="0.5 0 1 0 0 3.14159 world usb_cam2" />


<!-- BEGIN ROBOT 1-->
  <group ns="sparki1">
    <param name="tf_prefix" value="sparki1_tf" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_sparki_tf" args="1 1 0 0 0 0 table_map sparki1" />
    <node pkg="sparki_control" type="sparki_pid_node" name="sparki_pid_1" />
    <node pkg="sparki_control" type="sparki_controller.py" name="sparki_controller_1" />
  </group>

<!-- BEGIN ROBOT 2-->
  <group ns="sparki2">
    <param name="tf_prefix" value="sparki2_tf" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_sparki_tf" args="2 1 0 1.570795 0 0 table_map sparki2" />
    <node pkg="sparki_control" type="sparki_pid_node" name="sparki_pid_2" />
    <node pkg="sparki_control" type="sparki_controller.py" name="sparki_controller_2" />
  </group>

<!-- BEGIN ROBOT 3-->
  <group ns="sparki3">
    <param name="tf_prefix" value="sparki3_tf" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_sparki_tf" args="0.25 1.5 0 -0.7853975 0 0 table_map sparki3" />
    <node pkg="sparki_control" type="sparki_pid_node" name="sparki_pid_3" />
    <node pkg="sparki_control" type="sparki_controller.py" name="sparki_controller_3" />
  </group>

  <!-- TEST CLIENT -->
  <group ns="client">
    <node pkg="sparki_client_example" type="sparki_client_example" name="TestClient" />
  </group>

</launch>
